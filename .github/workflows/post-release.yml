name: Post Release

# run after releases are published
on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      target_commitish:
        description: "Release branch"
      tag_name:
        description: "Tag name (with 'v' prefix)"

jobs:
  bump:
    name: Merge release branch
    runs-on: ubuntu-20.04

    permissions:
      contents: write

    steps:
      - name: Checkout ${{ github.event.release.target_commitish || github.event.inputs.target_commitish }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish || github.event.inputs.target_commitish }}
          lfs: true

      - name: Configure git
        run: |
          git config user.name "Foxglove"
          git config user.email "contact@foxglove.dev"

      - id: bump-version
        uses: foxglove/action-bump-version@v1
        with:
          version: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}-dev
          commit-message: Bump dev
          push: true

      - name: Merge release into main
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/merges
          owner: foxglove
          repo: studio
          base: main
          head: ${{ github.event.release.target_commitish || github.event.inputs.target_commitish }}
        env:
          GITHUB_TOKEN: ${{ secrets.FOXGLOVEBOT_GITHUB_TOKEN }}

  npm:
    name: Publish to NPM
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
          lfs: true

      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org
          cache: yarn

      - run: yarn install --immutable

      - run: npm publish ./packages/studio
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - run: npm publish ./packages/studio-base
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  docker:
    name: Publish to GHCR
    runs-on: ubuntu-20.04

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
          lfs: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker tags
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.release.tag_name || github.event.inputs.tag_name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.release.tag_name || github.event.inputs.tag_name }}
            latest

      - name: Configure QEMU
        uses: docker/setup-qemu-action@v1

      - name: Configure Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
